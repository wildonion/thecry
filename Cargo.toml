[package]
name = "thecry"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
tokio = { version = "1", features = ["full"] }
serde = {version = "1", features = ["derive"] }
actix-redis = "0.12.0"
actix = "0.13.0"
actix-cors = "0.6.4"
actix-web = { version = "4", features = ["openssl"] }
actix-web-actors = "4.2.0"
futures-util = "0.3"
rayon = "1"
serde_json = "1"
uuid = { version = "1", features = ["serde", "v4"] }
chrono = { version = "0.4", features = ["serde"] }
log = "0.4"
dotenv = "0.15"
pretty_env_logger = "0.4.0"
log4rs = "1.2.0"
tokio-cron-scheduler = "0.9.1"
env_logger = "0.10.0"
bytes = { version = "1", features = ["serde"] }
hex = "0.4"
ring = "0.16.20"
sha2 = "0.10.6"
rand = "0.8"
rand_chacha = "0.3.1"
rust-argon2 = "1"
once_cell = "1.17.1"
secp256k1 = { version = "0.27.0", features = ["rand", "bitcoin-hashes-std"] }
themis = "0.14.0"
bindgen = "0.66.1"
wallexerr = "0.2.4"


[[bin]]
name = "thecry"
path = "src/main.rs"


[lib]
# libraries don't have entry points, you can't run them,they're used for functionality sharing like binding a .wasm into js codes
# we need lib.rs and crate type of cdylib for none binary like .wasm, .so, .dylib and .dll files or for tests
crate-type = ["cdylib", "rlib"]
path = "src/lib.rs"
name = "crypter"


[profile.release]
panic = "abort"
opt-level = "z"
lto = true
codegen-units = 1
overflow-checks = true # panic on any overflow